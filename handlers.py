import random, kb, asyncio

from bot import unknown
from aiogram import types
from states import Lk, Save
from create import video_link
from loader import dp, bot
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


# —Ö—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É start
@dp.message_handler(CommandStart())
async def start(message: types.Message):
	button_youtube0 = InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='t.me/joinchat/R1Ct6BRjHCkO_AYO')
	inline_youtube0 = InlineKeyboardMarkup(row_width=1).add(button_youtube0)

	await message.answer('–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ‚Äî –°–∫–∞—á–∞—Ç—å –í–∏–¥–µ–æ –Æ—Ç—É–± –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –ø–æ—Å—Ç–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞, –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å—Ñ–µ—Ä–µ IT, –∞ —Ç–∞–∫–∂–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∏!\n\n'
		'–ú—ã –±—É–¥–µ–º –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã —Ç–µ–±–µ ü•∞',
		reply_markup=inline_youtube0)
	
	await message.answer('–ü–µ—Ä–µ–π–¥–∏ –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, —á—Ç–æ–±—ã –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ\n'
		'PS: –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É üëá',
		reply_markup=kb.reply_main)

# —Ö—ç–Ω–¥–ª–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler()
async def message(message: types.Message):
	if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
		await message.answer('–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n'
			'–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –Ω–∞–∂–º–∏ üíæ –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ\n'
			'–ó–∞–π—Ç–∏ –≤ –õ–ö, –Ω–∞–∂–º–∏ üì∞ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n'
			'–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ',
			reply_markup=kb.reply_menu)

	elif message.text == 'üíæ –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ':
		await message.answer('–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫, —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –ù–∞–∑–∞–¥, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É',
			reply_markup=kb.reply_back)
		await Save.video.set()

	elif message.text == 'üîÑ –°–∫–∞—á–∞—Ç—å –µ—â—ë —Ä–∞–∑':
		await message.answer('–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫, —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –ù–∞–∑–∞–¥, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É',
			reply_markup=kb.reply_back)
		await Save.video.set()

	elif message.text == 'üì∞ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç':
		await message.answer('–¢—ã –∑–∞—à—ë–ª –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –≤ —Ä–∞–∑–¥–µ–ª–µ\n'
			'üìö –ù–∞—à–∏ –∫–∞–Ω–∞–ª—ã –º–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∑–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ üíé –ú–æ–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã',
			reply_markup=kb.reply_lk)
		await Lk.choice.set()

	elif message.text == 'üí¨ –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏':
		await message.answer('üîΩ –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º —Å—é–¥–∞ üîΩ\n'
			'                   t.me/Flaiers',
			reply_markup=kb.reply_main)

	elif message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
		await message.answer('–¢—ã –∑–∞—à—ë–ª –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –≤ —Ä–∞–∑–¥–µ–ª–µ\n'
			'üìö –ù–∞—à–∏ –∫–∞–Ω–∞–ª—ã –º–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∑–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ üíé –ú–æ–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã',
			reply_markup=kb.reply_lk)
		await Lk.choice.set()

	else:
		await message.answer(random.choice(unknown),
			reply_markup=kb.reply_menu)

# —Ö—ç–Ω–¥–ª–µ—Ä –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
@dp.message_handler(state=Lk.choice)
async def lk(message: types.Message, state: FSMContext):
	lk = message.text
	async with state.proxy() as data:
		data['lk_request'] = lk
		choice = data['lk_request']
		if choice == 'üíé –ú–æ–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã':
			button_sell = InlineKeyboardButton('–û–±–º–µ–Ω –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤', callback_data='sell')
			inline_sell = InlineKeyboardMarkup(row_width=1).add(button_sell)
			try:
				user_channel = await bot.get_chat_member(chat_id=-1001196469736, user_id=message.from_user.id)
				if user_channel["status"] == 'left':
					"""–¥–ª—è —Ç–µ—Ö –∫—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"""
					await message.answer('–£ —Ç–µ–±—è –Ω–∞ —Å—á–µ—Ç—É üí≥:\n'
						f'‚Äî 0 üíé',
						reply_markup=inline_sell)

					await message.answer('–ù–∞–∂–º–∏ –Ω–∞ üëÜ, —á—Ç–æ–±—ã –æ–±–º–µ–Ω—è—Ç—å üíé. –•–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –Ω–∞–∂–º–∏ –ù–∞–∑–∞–¥',
						reply_markup=kb.reply_back)
					await state.reset_state()

				else:
					"""–¥–ª—è —Ç–µ—Ö –∫—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"""
					await message.answer('–£ —Ç–µ–±—è –Ω–∞ —Å—á–µ—Ç—É üí≥:\n'
						f'‚Äî 100 üíé',
						reply_markup=inline_sell)

					await message.answer('–ù–∞–∂–º–∏ –Ω–∞ üëÜ, —á—Ç–æ–±—ã –æ–±–º–µ–Ω—è—Ç—å üíé. –•–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –Ω–∞–∂–º–∏ –ù–∞–∑–∞–¥',
						reply_markup=kb.reply_back)
					await state.reset_state()

			except:
				await message.answer('–£ —Ç–µ–±—è –Ω–∞ —Å—á–µ—Ç—É üí≥:\n'
					f'‚Äî 0 üíé',
					reply_markup=inline_sell)

				await message.answer('–ù–∞–∂–º–∏ –Ω–∞ üëÜ, —á—Ç–æ–±—ã –æ–±–º–µ–Ω—è—Ç—å üíé. –•–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –Ω–∞–∂–º–∏ –ù–∞–∑–∞–¥',
					reply_markup=kb.reply_back)
				await state.reset_state()

		elif choice == 'üìö –ù–∞—à–∏ –∫–∞–Ω–∞–ª—ã':
			await message.answer('–ü–æ–¥–ø–∏—Å–∞–≤—à–∏—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã. '
				'–≠—Ç–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏, –±–æ–Ω—É—Å—ã –∏ —Å–∫–∏–¥–∫–∏',
				reply_markup=kb.reply_back)

			button_fla = InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å –í–∏–¥–µ–æ –Æ—Ç—É–±', url='t.me/joinchat/R1Ct6BRjHCkO_AYO')
			button_fla_check = InlineKeyboardButton('‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='fla_check')
			inline_fla = InlineKeyboardMarkup(row_width=2).add(button_fla, button_fla_check)
			await message.answer('–ù–∞—à –∫–∞–Ω–∞–ª ‚Äî –°–∫–∞—á–∞—Ç—å –í–∏–¥–µ–æ –Æ—Ç—É–± –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –ø–æ—Å—Ç–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞, –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å—Ñ–µ—Ä–µ IT, –∞ —Ç–∞–∫–∂–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∏!',
				reply_markup=inline_fla)

			await state.reset_state()

		elif choice == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
			await message.answer('–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n'
			'–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –Ω–∞–∂–º–∏ üíæ –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ\n'
			'–ó–∞–π—Ç–∏ –≤ –õ–ö, –Ω–∞–∂–º–∏ üì∞ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n'
			'–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ',
				reply_markup=kb.reply_menu)
			await state.reset_state()

		else:
			await message.answer(random.choice(unknown),
				reply_markup=kb.reply_lk)

			await state.reset_state()
			await Lk.choice.set()

# —Ö—ç–Ω–¥–ª–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(state=Save.video)
async def link(message: types.Message, state: FSMContext):
	link = message.text
	async with state.proxy() as data:
		data['link_request'] = link
		answer = data['link_request']
		try:
			if answer == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
				await message.answer('–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n'
					'–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –Ω–∞–∂–º–∏ üíæ –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ\n'
					'–ó–∞–π—Ç–∏ –≤ –õ–ö, –Ω–∞–∂–º–∏ üì∞ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n'
					'–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ',
					reply_markup=kb.reply_menu)
				await state.reset_state()
			else:
				try:
					long_url = answer.split('&t=')[0]
					url = long_url.split('?v=')[1] # –µ—Å–ª–∏ –≤—Å—ë –û–ö —Ç–æ –ø–æ–ª—É—á–∏–ª–∏ id —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–∞–π—Ç
				except IndexError:
					try:
						url = answer.split('?v=')[1] # –µ—Å–ª–∏ –≤—Å—ë –û–ö —Ç–æ –ø–æ–ª—É—á–∏–ª–∏ id —Å —Å–∞–π—Ç–∞
					except IndexError:
						try:
							long_url = answer.split('?t=')[0]
							url = long_url.split('/')[3] # –µ—Å–ª–∏ –≤—Å—ë –û–ö —Ç–æ –ø–æ–ª—É—á–∏–ª–∏ id —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
						except IndexError:
							try:
								url = long_url.split('/')[3] # –µ—Å–ª–∏ –≤—Å—ë –û–ö —Ç–æ –ø–æ–ª—É—á–∏–ª–∏ id –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
							except IndexError:
								await message.answer('–¢—ã –≤–≤–æ–¥–∏—à—å –∫–∞–∫—É—é-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –æ—Ç–ø—Ä–∞–≤—å –µ—ë –º–Ω–µ —Å–Ω–æ–≤–∞, –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –ù–∞–∑–∞–¥',
									reply_markup=kb.reply_back)
				try:
					url_720 = video_link('720', url)
					url_360 = video_link('360', url)
					url_image = video_link('img', url)
					button_720 = InlineKeyboardButton('üìπ –í–∏–¥–µ–æ 720', url=url_720)
					button_360 = InlineKeyboardButton('üé• –í–∏–¥–µ–æ 360', url=url_360)
					button_pic = InlineKeyboardButton('üåÉ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–≤—å—é', url=url_image)
					inline_url = InlineKeyboardMarkup(row_width=2).add(button_720, button_360, button_pic)
					await message.answer('–í–æ—Ç –∏ –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∞\n'
						'–ö–ª–∏–∫–∞–π –Ω–∞ —Ç—É –∫–Ω–æ–ø–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∞ –∏–ª–∏ —Å–∫–∞—á–∞—Ç—å –ø—Ä–µ–≤—å—é –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∞:',
						reply_markup=inline_url)
					await message.answer('–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –µ—â—ë —Ä–∞–∑ —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫, –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
						reply_markup=kb.reply_r_main)
					await state.reset_state()
				except UnboundLocalError:
					pass

		except Exception:
			pass

@dp.callback_query_handler(lambda message: message.data.startswith("fla_check"))
async def fla_check(callback_query: types.CallbackQuery, state:FSMContext):
	user_channel = await bot.get_chat_member(chat_id=-1001196469736, user_id=callback_query.from_user.id)
	if user_channel["status"] == 'left':
		"""–¥–ª—è —Ç–µ—Ö –∫—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"""
		async with state.proxy() as data:
				fla = '0'
				data["crystal_fla"] = fla
		await bot.send_message(callback_query.from_user.id, '–Ø –ø—Ä–æ–≤–µ—Ä–∏–ª, —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è. –ü–æ–¥–ø–∏—à–∏—Å—å —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã üòâ',
			reply_markup=kb.reply_back)
	else:
		"""–¥–ª—è —Ç–µ—Ö –∫—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"""
		async with state.proxy() as data:
				fla = '100'
				data["crystal_fla"] = fla
		await bot.send_message(callback_query.from_user.id, '–Ø –ø—Ä–æ–≤–µ—Ä–∏–ª, —Ç—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è. –£–∂–µ –Ω–∞—á–∏—Å–ª–∏–ª —Ç–µ–±–µ 100 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤!\n\n'
			'–ï—Å–ª–∏ –æ—Ç–ø–∏—à–µ—à—å—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞, —Ç—ã –ø–æ—Ç–µ—Ä—è–µ—à—å –≤—Å–µ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ üíé. –ù–∞–∂–∏–º–∞–π –ù–∞–∑–∞–¥, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',
			reply_markup=kb.reply_back)


@dp.callback_query_handler(lambda message: message.data.startswith("sell"))
async def sell(callback_query: types.CallbackQuery, state:FSMContext):
	await bot.send_message(callback_query.from_user.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üíé –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è. –û–±–º–µ–Ω –≤–æ–∑–º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç 199, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —É –Ω–∞—Å —Ä–∞—Å—à–∏—Ä–∏—Ç—Å—è –±–∞–∑–∞ –∫–∞–Ω–∞–ª–æ–≤ –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –µ—â–µ –±–æ–ª—å—à–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤\n\n'
		'–ï—Å–ª–∏ –æ—Ç–ø–∏—à–µ—à—å—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞, —Ç—ã –ø–æ—Ç–µ—Ä—è–µ—à—å –≤—Å–µ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ üíé. –ù–∞–∂–∏–º–∞–π –ù–∞–∑–∞–¥, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',
		reply_markup=kb.reply_back)